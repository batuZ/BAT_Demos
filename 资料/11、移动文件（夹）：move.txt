标题：一日一教学系列11_移动文件（夹）：move
首发地址：http://bbs.bathome.cn/viewthread.php?tid=4820
首发日期：2009.6.6
更新日期：2009.6.11

上一篇：删除文件夹：rd http://bbs.bathome.cn/viewthread.php?tid=3340
下一篇：字符串查找：find http://bbs.bathome.cn/viewthread.php?tid=4830

　　move，英文含义为“移动”，在批处理中，它可以把文件或文件夹从A处移动到B处。

　　很多时候，我看到有人在回复“如何把文件从A处移动到B处”的时候，给出的建议往往是：先用copy命令复制文件，然后用del和rd删除文件和文件夹。回复者根本没有想到，他给出的操作流程太繁琐了，他根本没有意识到，系统已经提供了直接移动文件的命令move！

　　move的使用非常简单，基本格式为 move A B。在这里，A表示你想要执行移动操作的文件或文件夹，B表示A被移动后保存的位置，而A可以使用相对路径，也可以使用绝对路径，甚至可以使用通配符，但是，在move执行移动文件的功能的时候，B只能是目录路径，而不能是文件路径――很难想象，你要把a.txt文件移动到b.txt文件里去，操作系统会做何感想。比如：move a.txt d:\test，表示把当前目录下的a.txt移动到d:\test目录下；move c:\test.txt d:\，表示把C盘根目录下的test.txt文件移动到D盘根目录下；move c:\*.txt d:\表示把C盘根目录下的文本文件移动到D盘根目录下。

    另外，需要特别注意的是：move不能跨分区移动文件夹。感谢zqz0012005的提醒。

　　上面已经说过，如果你想把a.txt移动到b.txt文件里去，操作系统肯定会很不高兴。

　　如果你确实要这么干呢？

　　move a.txt b.txt！

　　你会发现，对于你的胡缠蛮搞，操作系统也没拦着你，它很顺从地执行了你的命令，但是，结果并没有像你所期望的那样，把a.txt放进b.txt里面去，而是把a.txt改名为b.txt了。

　　原来，在 move A B 这样的命令中，move具备移动文件（夹）的基本功能，还兼有重命名文件（夹）的功效，具体起什么作用，视情况决定：

　　1、如果A、B同为文件夹名，则把A移动到B目录下；
　　2、如果A为文件名，
　　　　① B为文件夹名的时候，将把A移动到B目录下；
　　　　② B为文件名的时候，将把A重命名为B；如果B所在的位置为另一目录，则表示在把A移动到B所在的目录下的同时，重命名为B。

　　一旦你明白了move的这些用法，重命名文件的时候，你将会很容易在ren和move之间做取舍：如果只是单纯地重命名文件，则ren和move任选其一即可，只是move的写法显得有点怪异而已；如果在要移动文件之后，还要重命名文件，选择 move c:\test.txt d:\abc\1.txt 的写法将一步到位，而先 move c:\test.txt d:\abc 之后，再ren d:\abc\test.txt 1.txt 的写法将显得繁琐，最不可取的做法，是先copy，再del/rd，最后再ren，这是追求代码至精至简的人士所不能容忍的铺张浪费行为。

　　有时候，move的过程并不会一帆风顺，比较常见的情形是：目的地有重名文件存在，系统找不到指定的文件。

　　先说重名文件的情况。

　　如果有重名文件出现，move不会成功，它会很体贴地询问你：改写××吗？（Yes/No/All）：其中，××表示目的地的重名文件。如果选择Yes，将覆盖重名文件；如果选择No，则放弃move操作；如果选择All，则在批量move的时候，如果存在同名文件，将不再询问是否覆盖，而是直接覆盖掉重名文件。

　　如果你嫌跳出这个提示信息很麻烦，而你的真正目的是强行覆盖所有的重名文件的话，给move加上个 /Y 的开关，写成 move /y A B就可以了――在cmd 窗口中，默认情况下，move 是带 /-y  开关的，也就是默认会出现重名文件的提示信息，只不过这个默认开关是可以省略的；而在批处理脚本中，move 默认带的是 /y 开关，不会出现重名提示而直接覆盖同名文件，和cmd窗口中的情形正好相反。


　　再来看系统找不到指定文件的情况。

　　有时候，你会很奇怪，move A B 的时候，A明明是存在的，为什么还要不知趣地提醒你：“系统找不到指定文件”呢？这不是在张口说瞎话么？

　　不过，微软也挺无辜的：出错的情形太多了，要我对每一种出错情形都给出明确具体的原因，我哪有那么大的神通呀？我们搞技术的也不容易啊，能提醒你找不到指定文件，我们已经尽力了，您老就多多包涵一下吧。

　　得了，我们还是自己动手找原因吧。

　　原来，move没有dir的神通，它不能够识别出带隐藏或系统属性的文件，在这些文件面前，它成了瞎子，不过，这不能说move太无能，而是微软为了安全起见，限制了很多危险命令对带有隐藏或系统属性的文件进行直接操作――del、ren都是这副德性；而rd命令，则属于漏网之鱼，是个例外，要不然，微软的系统就不会有打补丁一说了。

　　如何解决这一难题呢？

　　没办法，只能老老实实地先用attrib命令去掉这些文件的隐藏或系统属性，再来move吧。至于在写批处理的时候，如何判断哪些文件需要先attrib之后再move，哪些文件可以直接move，则不属于本文要讨论的范畴，还请读者关注论坛的其他相关讨论话题。